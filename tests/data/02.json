{
  "assignment_message": "Submit each part of your homework to the right bucket or you will not receive credit.",
  "part_names": [
    "Problem 1: Temperature", "Problem 2: Variables", "Problem 3: Area & Volume", "Problem 4: Count Odd"
  ],
  "resource_limits": {
    "RLIMIT_CPU": 60,
    "RLIMIT_NPROC": 100,
    "RLIMIT_AS": "RLIM_INFINITY",
    "RLIMIT_SIGPENDING" : 100
  },
  "autograding": {
    "submission_to_validation": [ "part2/*.txt" ]
  },
  "testcases": [
    {
      "title": "Convert Temperature",
      "command": [
        "python3 part1/*.py",
        "submitty_count call -l python print part1/*.py"
      ],
      "points": 2,
      "validation": [
        {
          "method": "diff",
          "actual_file": "STDOUT_0.txt",
          "description": "Program Output",
          "expected_file": "p1_out.txt"
        },
        {
          "method" : "intComparison",
          "actual_file" : "STDOUT_1.txt",
          "description" : "Number of print statements",
          "comparison" : "ge",
          "term" : 1,
          "failure_message" : "Looks like you forgot the 'print' statement.",
          "show_message" : "on_failure",
          "show_actual" : "never"
        }
      ]
    },
    {
      "type" : "FileCheck",
      "title" : "Legal Variable Names",
      "points" : 1,
      "validation" : [
        {
          "method" : "diff",
          "actual_file" : "part2/*.txt",
          "description" : "Program Output",
          "expected_file" : "p2_out.txt",
          "show_expected" : "never",
          "show_actual" : "always",
          "show_message" : "on_failure",
          "failure_message" : "Incorrect Answer"
        }
      ]
    },
    {
      "title" : "Volume and Area",
      "command" : [
        "python3 part3/*.py",
        "submitty_count token -l python Equal part3/*.py",
        "submitty_count token -l python Asterisk part3/*.py",
        "submitty_count token -l python Plus part3/*.py"
      ],
      "points" : 4,
      "validation" : [
        {
          "method" : "diff",
          "actual_file" : "STDOUT_0.txt",
          "description" : "Program Output",
          "expected_file" : "p3_out.txt"
        },
        {
          "method" : "intComparison",
          "actual_file" : "STDOUT_1.txt",
          "description" : "Number of assignments",
          "comparison" : "ge",
          "term" : 5,
          "failure_message" : "Re-read the problem instructions.",
          "show_message" : "on_failure",
          "show_actual" : "never"
        },
        {
          "method" : "intComparison",
          "actual_file" : "STDOUT_2.txt",
          "description" : "Number of multiplications",
          "comparison" : "ge",
          "term" : 7,
          "failure_message" : "Re-read the problem instructions.",
          "show_message" : "on_failure",
          "show_actual" : "never"
        },
        {
          "method" : "intComparison",
          "actual_file" : "STDOUT_3.txt",
          "description" : "Number of additions",
          "comparison" : "ge",
          "term" : 2,
          "failure_message" : "Re-read the problem instructions.",
          "show_message" : "on_failure",
          "show_actual" : "never"
        }
      ]
    },
    {
      "title" : "Count Odd",
      "command" : [ "python3 part4/*.py",
                    "submitty_count token -l python While part4/*.py" ],
      "points" : 2,
      "validation" : [
        {
          "method" : "diff",
          "actual_file" : "STDOUT_0.txt",
          "description" : "Program Output",
          "expected_file" : "p4_out.txt"
        },
        {
          "method" : "intComparison",
          "actual_file" : "STDOUT_1.txt",
          "description" : "Number of while loops",
          "comparison" : "ge",
          "term" : 1,
          "failure_message" : "Re-read the problem instructions.",
          "show_message" : "on_failure",
          "show_actual" : "never"
        }
      ]
    }
  ]
}